<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.msx80.omicron</groupId>
  <artifactId>omicronandroid</artifactId>
  <version>1.0.0</version>
  <packaging>apk</packaging>

  <name>OmicronAndroid</name>
  <properties>
  
  <!-- This is the omicron cartridge to be package as an Android app. You can pass the properties as arguments to mvn with -D -->
  <!--	
    <cartridge.artifactId>helloworld</cartridge.artifactId>
	<cartridge.groupId>com.github.msx80.omicron</cartridge.groupId>
	<cartridge.version>0.0.3</cartridge.version> -->
  <!-- ============================================================  -->
  
    <it-plugin.version>4.6.3-SNAPSHOT</it-plugin.version>
	<maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>	
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<gdx.version>1.12.1</gdx.version>
	<omicron.engine.version>0.0.6</omicron.engine.version>
  </properties>

<pluginRepositories>
    <pluginRepository>
        <id>jitpack.io</id>
		<url>https://jitpack.io</url>
    </pluginRepository>
</pluginRepositories> 
  
  <repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>
  <dependencies>
  
  <dependency>
	<artifactId>${cartridge.artifactId}</artifactId>
	<groupId>${cartridge.groupId}</groupId>
	<version>${cartridge.version}</version>
</dependency>

<dependency>
  <groupId>com.github.msx80.omicron</groupId>
  <artifactId>android-lib</artifactId>
  <version>${omicron.engine.version}</version>
</dependency>

<dependency>
    <groupId>com.badlogicgames.gdx-controllers</groupId>
    <artifactId>gdx-controllers-android</artifactId>
    <version>2.2.3</version>
	<type>aar</type>
</dependency>

  
    <dependency>
      <groupId>com.google.android</groupId>
      <artifactId>android</artifactId>
      <version>4.1.1.4</version>
      <scope>provided</scope>
    </dependency>

	<dependency>
      <groupId>com.badlogicgames.gdx</groupId>
      <artifactId>gdx-backend-android</artifactId>
      <version>${gdx.version}</version>
	  <type>aar</type>
    </dependency>
	
	<dependency>
      <groupId>com.github.msx80.omicron</groupId>
      <artifactId>omicron-engine</artifactId>
      <version>${omicron.engine.version}</version>
    </dependency>	
  </dependencies>

  <build>
   <resources>
    <resource>
      <directory>${project.basedir}</directory>
      <filtering>true</filtering>
      <targetPath>${project.build.directory}/filtered-manifest</targetPath>
      <includes>
        <include>src/main/AndroidManifest.xml.template</include>
      </includes>
    </resource>
  </resources>
  
  
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.msx80</groupId>
          <artifactId>android-maven-plugin</artifactId>
          <version>${it-plugin.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
		  <version>3.13.0</version>
        </plugin>
		<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.1</version>
		</plugin>
		<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
				<version>1.2.1</version>
		</plugin>
      </plugins>
    </pluginManagement>
	
    <plugins>
	
	
	 <plugin>
	 <!-- parse the version of the cartridge into Major, Minor, Incremental etc. Used to derive the versionCode from the Incremental part. -->
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>build-helper-maven-plugin</artifactId>
    <version>3.6.0</version>
    <executions>
      <execution>
        <phase>validate</phase>
        <id>parse-version</id>
        <goals>
          <goal>parse-version</goal>
        </goals>
        <configuration>
            <propertyPrefix>cartridgeVersion</propertyPrefix>
			<versionString>${cartridge.version}</versionString>
        </configuration>
      </execution>
    </executions>
  </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.1</version>
            <executions>
                <execution>
                    <phase>validate</phase>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    <configuration>
                        <tasks>
						    <echo>Cartridge version breakup:</echo>
                            <echo>Major: ${cartridgeVersion.majorVersion}</echo>
                            <echo>Minor: ${cartridgeVersion.minorVersion}</echo>
                            <echo>Incremental (this will be used as VersionCode): ${cartridgeVersion.incrementalVersion}</echo>
                            <echo>Qualifier: ${cartridgeVersion.qualifier}</echo>
                            <echo>BuildNumber: ${cartridgeVersion.buildNumber}</echo>
                        </tasks>
                    </configuration>
                </execution>
            </executions>
        </plugin>
	            <plugin>
				
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
						<!-- Unpack libgdx.so from LibGDX native packages -->
                        <id>armeabi-v7a</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
									<artifactId>gdx-platform</artifactId>
									<groupId>com.badlogicgames.gdx</groupId>
									<version>${gdx.version}</version>
									<classifier>natives-armeabi-v7a</classifier>
                                    <outputDirectory>${project.build.directory}/libgdxnatives/armeabi-v7a/</outputDirectory>
                                    <includes>libgdx.so</includes>
                                </artifactItem>
                                <artifactItem>
									<artifactId>gdx-platform</artifactId>
									<groupId>com.badlogicgames.gdx</groupId>
									<version>${gdx.version}</version>
									<classifier>natives-arm64-v8a</classifier>
                                    <outputDirectory>${project.build.directory}/libgdxnatives/arm64-v8a/</outputDirectory>
                                    <includes>libgdx.so</includes>
                                </artifactItem>								
                            </artifactItems>
                        </configuration>
                    </execution>
                  			
					
					<execution>
						<!-- Unpack omicron.properties from the cartridge in order to later read all settings -->
                        <id>unpack</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
									<artifactId>${cartridge.artifactId}</artifactId>
									<groupId>${cartridge.groupId}</groupId>
									<version>${cartridge.version}</version>
                                    <outputDirectory>${project.build.directory}/omicron/</outputDirectory>
                                    <includes>omicron.properties</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
	
	 <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
			<!-- read properties from omicron.properties extracted from the cartridge -->
			<!-- then write all properties to an omicron_android.properties to be included in the android apk,
				so that the Launcher can instantiate the main class dinamically	-->
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
			  <goal>write-project-properties</goal>
            </goals>
            <configuration>
			<useDefaultValues>true</useDefaultValues>
			<files>
                <file>${project.build.directory}/omicron/omicron.properties</file>
              </files>
			  <outputFile>${project.build.outputDirectory}/omicron_android.properties</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
	  
	  	<plugin>
		<!-- handle resources with filtering (to dinamically build AndroidManifest.xml) -->
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
            <execution>
                <phase>initialize</phase>
                <goals>
                    <goal>resources</goal>
                </goals>
            </execution>
        </executions>
    </plugin>
	
     
	
	
      <plugin>
		<!-- main android plugin. select platform and build-tool version (33.0.2 is the last one supported by java 8) -->
        <groupId>com.github.msx80</groupId>
        <artifactId>android-maven-plugin</artifactId>
		        <!--<executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>apk</goal>
            </goals>-->
        <configuration>
		  <!-- read natives from the folder we have unpacked them earlier -->
		  <nativeLibrariesDirectory>${project.build.directory}/libgdxnatives/</nativeLibrariesDirectory>
          <sdk>
            <platform>26</platform>
			<buildTools>33.0.2</buildTools>
          </sdk>
		  <release>true</release>
			<dexCompiler>d8</dexCompiler>
			<d8>
            <minApi>26</minApi>
         </d8>
		 <!-- use the dynamically built manifest -->
		 <androidManifestFile>${project.build.directory}/filtered-manifest/src/main/AndroidManifest.xml.template</androidManifestFile>
        </configuration>
		 <!--  </execution>
        </executions> -->
      </plugin>
    </plugins>
	<finalName>${cartridge.artifactId}</finalName>
  </build>

</project>
